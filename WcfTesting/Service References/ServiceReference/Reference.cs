//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfTesting.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfCrudUsers.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VisitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.UserService")]
    public interface UserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetAll", ReplyAction="http://tempuri.org/UserService/GetAllResponse")]
        WcfTesting.ServiceReference.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetAll", ReplyAction="http://tempuri.org/UserService/GetAllResponse")]
        System.Threading.Tasks.Task<WcfTesting.ServiceReference.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Get", ReplyAction="http://tempuri.org/UserService/GetResponse")]
        WcfTesting.ServiceReference.User Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Get", ReplyAction="http://tempuri.org/UserService/GetResponse")]
        System.Threading.Tasks.Task<WcfTesting.ServiceReference.User> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Create", ReplyAction="http://tempuri.org/UserService/CreateResponse")]
        void Create(WcfTesting.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Create", ReplyAction="http://tempuri.org/UserService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(WcfTesting.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Update", ReplyAction="http://tempuri.org/UserService/UpdateResponse")]
        void Update(WcfTesting.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Update", ReplyAction="http://tempuri.org/UserService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WcfTesting.ServiceReference.User item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Delete", ReplyAction="http://tempuri.org/UserService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Delete", ReplyAction="http://tempuri.org/UserService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/SaveChanges", ReplyAction="http://tempuri.org/UserService/SaveChangesResponse")]
        void SaveChanges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/SaveChanges", ReplyAction="http://tempuri.org/UserService/SaveChangesResponse")]
        System.Threading.Tasks.Task SaveChangesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceChannel : WcfTesting.ServiceReference.UserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WcfTesting.ServiceReference.UserService>, WcfTesting.ServiceReference.UserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfTesting.ServiceReference.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WcfTesting.ServiceReference.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WcfTesting.ServiceReference.User Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<WcfTesting.ServiceReference.User> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Create(WcfTesting.ServiceReference.User item) {
            base.Channel.Create(item);
        }
        
        public System.Threading.Tasks.Task CreateAsync(WcfTesting.ServiceReference.User item) {
            return base.Channel.CreateAsync(item);
        }
        
        public void Update(WcfTesting.ServiceReference.User item) {
            base.Channel.Update(item);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WcfTesting.ServiceReference.User item) {
            return base.Channel.UpdateAsync(item);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public void SaveChanges() {
            base.Channel.SaveChanges();
        }
        
        public System.Threading.Tasks.Task SaveChangesAsync() {
            return base.Channel.SaveChangesAsync();
        }
    }
}
